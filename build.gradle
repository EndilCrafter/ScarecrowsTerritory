buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

version = '1.1.4-mc1.12'
group = 'com.supermartijn642.scarecrowsterritory' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'scarecrowsterritory'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    String resolved_core_plugin = "com.supermartijn642.scarecrowsterritory.core.CoreMod"
    String resolved_core_config = "mixins.scarecrowsterritory.json"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'fml.coreMods.load', resolved_core_plugin

            args '--mixin', resolved_core_config

            mods {
                wirelesschargers {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'fml.coreMods.load', resolved_core_plugin

            args '--mixin', resolved_core_config

            mods {
                wirelesschargers {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url = "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

    // Core lib
    implementation fg.deobf('curse.maven:supermartijn642s-core-lib-454372:3413418')
    // Config lib
    implementation fg.deobf('curse.maven:supermartijn642s-config-lib-438332:3413933')

    // This needs to be compile, so it gets included in the build jar
    compile('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}

jar {
    from {
        configurations.compile
                .filter { "mixin-0.8.3-SNAPSHOT.jar" == it.name }
                .collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes "FMLCorePlugin": "com.supermartijn642.scarecrowsterritory.core.CoreMod"
        attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
        attributes "MixinConfigs": "mixins.scarecrowsterritory.json"
    }
}

mixin {
    add sourceSets.main, "mixins.scarecrowsterritory.json"
    disableAnnotationProcessorCheck()
}

sourceSets {
    main {
        resources { srcDir 'src/generated/resources' }
        output.resourcesDir = output.classesDirs.asPath
    }
}

jar.finalizedBy('reobfJar')